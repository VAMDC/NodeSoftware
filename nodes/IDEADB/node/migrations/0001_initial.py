# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-01 14:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import node.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('middlename', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Energyscan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energyscan_data', models.TextField(verbose_name='Paste data from Origin in this field')),
                ('y_units', models.CharField(choices=[('1/s', '1/s'), ('cm2', 'cm2'), ('m2', 'm2'), ('unitless', 'unitless')], default='1/s', max_length=3, verbose_name='Please choose units for y-axis')),
                ('productiondate', models.DateField(verbose_name='Production Date')),
                ('comment', models.TextField(blank=True, max_length=2000, verbose_name='Comment (max. 2000 chars.)')),
                ('energyresolution', models.DecimalField(decimal_places=3, max_digits=4, verbose_name='Energy Resolution of the Experiment in eV')),
                ('lastmodified', models.DateTimeField(auto_now=True)),
                ('numberofpeaks', models.IntegerField(blank=True, verbose_name='Number of peaks visible (no shoulder structures)')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Massspec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.DecimalField(decimal_places=2, max_digits=5)),
                ('massspec_data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Resonance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.DecimalField(decimal_places=2, max_digits=5)),
                ('width', models.DecimalField(decimal_places=2, max_digits=3)),
                ('energyscan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.Energyscan')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal', models.CharField(max_length=200)),
                ('year', models.CharField(max_length=4)),
                ('number', models.CharField(blank=True, max_length=6)),
                ('volume', models.CharField(max_length=6)),
                ('doi', models.CharField(blank=True, max_length=100, verbose_name='DOI')),
                ('pagestart', models.CharField(max_length=5, verbose_name='Starting Page')),
                ('pageend', models.CharField(max_length=5, verbose_name='Ending Page')),
                ('url', models.URLField(blank=True)),
                ('title', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('book', 'Book'), ('database', 'Database'), ('journal', 'Journal'), ('preprint', 'Preprint'), ('private communication', 'Private Communication'), ('proceeding', 'Proceeding'), ('report', 'Report'), ('thesis', 'Thesis'), ('vamdc node', 'VAMDC Node')], default='journal', max_length=17)),
                ('authors', models.ManyToManyField(to='node.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, validators=[node.models.validate_name], verbose_name='Common Name (e.g. Water for H2O)')),
                ('chemical_formula', models.CharField(db_index=True, default='', max_length=40, validators=[node.models.validate_chemical_formula], verbose_name='Chemical Formula')),
                ('mass', models.PositiveIntegerField(db_index=True, verbose_name='Nominal Mass')),
                ('isotope', models.BooleanField(default=True, verbose_name='Tick, if this is the most abundant isotope')),
                ('nuclear_charge', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Number of Protons')),
                ('inchi', models.CharField(blank=True, db_index=True, max_length=300, verbose_name='InChI')),
                ('inchikey', models.CharField(blank=True, db_index=True, max_length=27, verbose_name='InChI-Key')),
                ('cas', models.CharField(blank=True, max_length=12, validators=[node.models.validate_CAS], verbose_name='CAS-Number')),
                ('molecule', models.BooleanField(verbose_name='Tick, if this is a molecule')),
            ],
            options={
                'verbose_name_plural': 'Species',
                'db_table': 'species',
                'ordering': ['chemical_formula', 'name'],
            },
        ),
        migrations.AddField(
            model_name='resonance',
            name='origin_species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resonance_origin_species', to='node.Species'),
        ),
        migrations.AddField(
            model_name='resonance',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.Source'),
        ),
        migrations.AddField(
            model_name='resonance',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resonance_species', to='node.Species'),
        ),
        migrations.AddField(
            model_name='massspec',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.Source'),
        ),
        migrations.AddField(
            model_name='massspec',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='massspec_species', to='node.Species'),
        ),
        migrations.AddField(
            model_name='energyscan',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.Experiment'),
        ),
        migrations.AddField(
            model_name='energyscan',
            name='origin_species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energyscan_origin_species', to='node.Species'),
        ),
        migrations.AddField(
            model_name='energyscan',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.Source'),
        ),
        migrations.AddField(
            model_name='energyscan',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energyscan_species', to='node.Species'),
        ),
    ]
